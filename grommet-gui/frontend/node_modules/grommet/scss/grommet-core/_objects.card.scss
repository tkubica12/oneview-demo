$card-hover-color: #EBEBEB;


@mixin truncate-paragraph($truncate-p-line-height, $truncate-p-font-size) {
  max-height: ($truncate-p-line-height * $truncate-p-font-size * 8);
  // p line-height * (# lines)

  &::after {
    margin-top: ($truncate-p-line-height * $truncate-p-font-size * 7);
    // p line-height * (# lines - 1)
  }

  @include media-query(palm) {
    max-height: ($truncate-p-line-height * $truncate-p-font-size * 5);

    &::after {
      margin-top: ($truncate-p-line-height * $truncate-p-font-size * 4);
    }
  }
}

.card {
  @include media-query(palm) {
    padding: 0;

    &:not(:last-child) {
      border-bottom: 1px solid $border-color;
    }
  }

  &__thumbnail {
    width: 100%;
    height: $inuit-base-spacing-unit * 11;
    flex-shrink: 1;

    .#{$grommet-namespace}anchor & {
      @include media-query(lap-and-up) {
        height: 100%;
      }
    }

    .#{$grommet-namespace}control-icon-watch {
      @include media-query(palm) {
        // don't shrink video WatchIcon when in mobile
        width: round($inuit-base-spacing-unit * 6);
        height: round($inuit-base-spacing-unit * 6);
      }
    }
  }

  &__content {
    // truncate description paragraph after 8 lines
    .#{$grommet-namespace}paragraph {
      overflow: hidden;
      display: -webkit-box;
      -webkit-line-clamp: 8;
      -webkit-box-orient: vertical;
      text-overflow: ellipsis;
      position: relative;

      @include truncate-paragraph($paragraph-line-height, $paragraph-font-size);

      // fallback for -webkit-line-clamp
      &::after {
        content: '...';
        text-align: right;
        top: 0;
        right: 0;
        display: block;
        position: absolute;
        background: linear-gradient(to right, transparent, $background-color 50%);
        width: $inuit-base-spacing-unit;
      }

      @supports(-webkit-line-clamp: 1) {
        &::after {
          display: none;
        }
      }

      @include media-query(palm) {
        -webkit-line-clamp: 4;
      }
    }

    .#{$grommet-namespace}paragraph--small {
      @include truncate-paragraph($paragraph-small-line-height, $paragraph-small-font-size);
    }

    .#{$grommet-namespace}paragraph--large {
      @include truncate-paragraph($paragraph-large-line-height, $paragraph-large-font-size);
    }

    .#{$grommet-namespace}paragraph--xlarge {
      @include truncate-paragraph($paragraph-xlarge-line-height, $paragraph-xlarge-font-size);
    }
  }

  div:focus,
  a:focus {
    outline: none;
  }

  &--direction-row {
    max-width: $size-large;

    .card__thumbnail {
      height: auto;
      width: $inuit-base-spacing-unit * 13; // 312px

      @include media-query(palm) {
        width: 100%;
        height: $inuit-base-spacing-unit * 11;
      }
    }

    .card__content {
      min-width: $inuit-base-spacing-unit * 11;

      @include media-query(palm) {
        flex: 0 1 auto;
      }
    }
  }

  &--direction-column {
    // allow column ContentCards not wrapped in Tiles to have
    // large Tile dimensions
    width: $tile-large-size;

    @include media-query(palm) {
      padding-left: 0px;
      padding-right: 0px;
      flex: 0 1 auto;
      width: auto;
    }
  }

  &--selectable {
    &:hover:not(.#{$grommet-namespace}tile--selected) {
      // hide Tile hover border style (gets set by onClick prop)
      background-color: transparent;
    }

    &:hover > div {
      background-color: $card-hover-color;
      color: $hover-text-color;
      cursor: pointer;

      .card__content {
        .#{$grommet-namespace}paragraph::after {
          background: linear-gradient(to right, transparent, $card-hover-color 50%);
        }
      }
    }
  }
}
