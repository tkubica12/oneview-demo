'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

exports.default = function (content) {

  this.cacheable && this.cacheable(true);
  this.addDependency(this.resourcePath);
  var query = _loaderUtils2.default.parseQuery(this.query);

  var fileName = _path2.default.basename(this.resourcePath).split('.')[0];

  var loaderContext = this;
  var callback = this.async();

  var parser = new _xml2js2.default.Parser({
    normalize: true,
    normalizeTags: true,
    explicitArray: true,
    explicitChildren: true,
    preserveChildrenOrder: true
  });

  parser.addListener('error', function (err) {
    return callback(err);
  });

  parser.addListener('end', function (result) {
    var svg = result.svg;
    var allowedTags = _reactSvgElements.svgTags.concat(['$', '$$', '#name']);
    var filtered = (0, _deepFilter2.default)(result, function (value, key, parent, parentKey) {
      if ('number' === typeof key) {
        if (parentKey === '$$') return allowedTags.indexOf(value['#name']) > -1;
        return true;
      }
      if (parentKey === '$') {
        // if the attribute is a namespace attr, then ignore
        if (key.indexOf(':') > -1) return false;
        // convert hyphens to camelcase
        if (key.indexOf('-') > -1) return (0, _camelCase2.default)(key);
        return true;
      }
      return allowedTags.indexOf(key) > -1;
    });

    // pass things through the pipeline
    // everything is synchronous anyway,
    // but the promise chain gives us a neat way to
    // list a pipeline - a list of transformations to
    // be done on some initial data
    Promise.resolve(filtered).then(function (data) {
      return (0, _buildXml2.default)(data, fileName, query.copyright, query.context);
    }).then(_makeComponent2.default).then(function (component) {
      return callback(null, component);
    }).catch(function (err) {
      return callback(err);
    });
  });

  parser.parseString(content.toString());
};

var _xml2js = require('xml2js');

var _xml2js2 = _interopRequireDefault(_xml2js);

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _loaderUtils = require('loader-utils');

var _loaderUtils2 = _interopRequireDefault(_loaderUtils);

var _buildXml = require('./build-xml');

var _buildXml2 = _interopRequireDefault(_buildXml);

var _deepFilter = require('./deep-filter');

var _deepFilter2 = _interopRequireDefault(_deepFilter);

var _reactSvgElements = require('./react-svg-elements');

var _makeComponent = require('./make-component');

var _makeComponent2 = _interopRequireDefault(_makeComponent);

var _camelCase = require('camel-case');

var _camelCase2 = _interopRequireDefault(_camelCase);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

; // (C) Copyright 2014-2015 Hewlett Packard Enterprise Development LP

module.exports = exports['default'];